@page "/"
@page "/{TenantCode}"
@inject BlazorDataModel Model
@implements IDisposable

@if(Model.Loaded && Model.LoggedIn && Model.View == _pageName) {
    if(Model.Tenant.TenantSettings.LogoIncludedOnHomePage && !String.IsNullOrWhiteSpace(LogoUrl)) {
        <div class="home-page-logo-container">
            <img src="@LogoUrl" class="logo-homepage" />
        </div>
    }

    <h1 class="page-title">
        @if(!String.IsNullOrWhiteSpace(Model.Tenant.TenantSettings.AppIcon)) {
            <i>@((MarkupString)Model.Tenant.TenantSettings.AppIcon)</i>
        }
        <Language Tag="Welcome" ReplaceSpaces="true" /> @Model.User.FirstName
    </h1>

    <Index_App />
}

@code {
    [Parameter] public string? TenantCode { get; set; }
    protected bool _loadedData = false;
    protected string _pageName = "home";

    public void Dispose()
    {
        Model.Subscribers_OnChange.Remove(_pageName);
        Model.OnChange -= OnDataModelUpdated;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender) {
            Model.TenantCodeFromUrl = TenantCode;
        }

        if(Model.Loaded) {
            if(!Model.LoggedIn) {
                Helpers.NavigateTo("Login");
            }
        }
    }

    protected override void OnInitialized()
    {
        if(!Model.Subscribers_OnChange.Contains(_pageName)) {
            Model.Subscribers_OnChange.Add(_pageName);
            Model.OnChange += OnDataModelUpdated;
        }

        Model.View = _pageName;
    }

    protected void OnDataModelUpdated()
    {
        if(Model.View == _pageName) {
            StateHasChanged();
        }
    }

    protected string LogoUrl =>
        Model.Tenant.TenantSettings.Logo.HasValue && Model.Tenant.TenantSettings.Logo != Guid.Empty
        ? Model.ApplicationUrl + "File/View/" + ((Guid)Model.Tenant.TenantSettings.Logo).ToString()
        : String.Empty;
}

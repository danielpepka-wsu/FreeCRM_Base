@page "/About"
@page "/{TenantCode}/About"
@implements IDisposable
@using Blazored.LocalStorage
@inject IJSRuntime jsRuntime
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject BlazorDataModel Model
@if (Model.View == _pageName) {
    <h1 class="page-title">
        <Language Tag="About" IncludeIcon="true" />
    </h1>

    <div class="mb-2">
        A free, open-source FreeCICD (Customer Relationship Management) system.
        Use this as-is to run your business, or use this as a starting point
        for building your own application on this framework.
    </div>

    if (!Model.LoggedIn) {
        <a href="@(Helpers.BuildUrl("Login"))" class="btn btn-primary">
            <Icon Name="Back" />
            <Language Tag="BackToLogin" />
        </a>
    }
}
@code {
    [Parameter] public string? TenantCode { get; set; }

    protected string _pageName = "about";

    public void Dispose()
    {
        Model.OnChange -= OnDataModelUpdated;

        Model.Subscribers_OnChange.Remove(_pageName);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) {
            Model.TenantCodeFromUrl = TenantCode;
        }

        if (Model.Loaded) {
            await Helpers.ValidateUrl(TenantCode);
        }
    }

    protected override void OnInitialized()
    {
        if (!Model.Subscribers_OnChange.Contains(_pageName)){
            Model.Subscribers_OnChange.Add(_pageName);
            Model.OnChange += OnDataModelUpdated;
        }

        Model.View = _pageName;
    }

    protected void OnDataModelUpdated()
    {
        if (Model.View == _pageName) {
            StateHasChanged();
        }
    }
}
